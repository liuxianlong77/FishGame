#pragma once

#include "Header.h"

class FishData
{
	FishData();
public:
	struct Data
	{
		int type;
		std::string name;
		int pay;
		int payEx;
		int group;
		int groupEx;
		int path_type;
		int ani_normal;
		int ani_dying;
		int min_speed;
		int max_speed;
		int silver_coin; // count
		int gold_coin; // count
		int break_type; // 0:none
		int circle_type; // 0:none
		int rate;
	};
	static FishData * GetShared();
	Data * getInfo(int type);
	std::map<int, Data> & getDatas() { return mData; }
	int nextType();
protected:
	std::map<int, Data> mData;
	std::vector<std::pair<int /* type */, int/*acc rate*/> > mRateAcc;
};
